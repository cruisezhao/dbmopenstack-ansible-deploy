---

- name: Create log director
  file:
    path: /var/log/cinder_setup
    state: directory
    mode: 0666 
 
- name: create cinder mysql db
  mysql_db: name={{cinder_db}} state=present

- name: create cinder db user
  mysql_user: name={{cinder_db_user}} password={{cinder_db_password}} priv={{cinder_db}}.*:ALL host={{item}} state=present
  with_items:
    - "%"
    - localhost


- name: create cinder user
  shell: | 
       export {{admin_openrc}}
       [ `openstack user list |grep cinder|wc -l` -gt 0 ]|| openstack user create --domain default --password "{{os_cinder_password}}" "{{os_cinder_user}}";
       openstack role add --project service --user cinder admin
       

- name: Create the cinder and cinderv2 service
  shell: |
       export {{admin_openrc}};
       [ `openstack service list |grep cinder|wc -l` -gt 0 ] || openstack service create --name cinder --description "OpenStack Block Storage" volume;
       [ `openstack service list |grep cinderv2|wc -l` -gt 0 ] || openstack service create --name cinderv2  --description "OpenStack Block Storage" volumev2
 
    

- name: create cinder endpoint
  shell: |
       export {{admin_openrc}};
       [ `openstack endpoint list |grep cinder|wc -l` -gt 0 ] ||
       (openstack endpoint create --region RegionOne volume public http://controller:8776/v1/%\(tenant_id\)s;
       openstack endpoint create --region RegionOne volume internal http://controller:8776/v1/%\(tenant_id\)s;
       openstack endpoint create --region RegionOne volume admin http://controller:8776/v1/%\(tenant_id\)s)


- name: create cinderv2 endpoint
  shell: |
       export {{admin_openrc}}
       [ `openstack endpoint list |grep cinderv2|wc -l` -gt 0 ] ||
       (openstack endpoint create --region RegionOne volumev2 public http://controller:8776/v2/%\(tenant_id\)s;
       openstack endpoint create --region RegionOne volumev2 internal http://controller:8776/v2/%\(tenant_id\)s;
       openstack endpoint create --region RegionOne volumev2 admin http://controller:8776/v2/%\(tenant_id\)s)

- name: install cinder package
  apt: name={{item}} force=yes
  with_items:
    - cinder-api
    - cinder-scheduler

- name: copy cinder.conf 
  template: src=cinder.conf.j2 dest=/etc/cinder/cinder.conf

- name: Test if db sync done   
  stat: path=/var/log/cinder_setup/.cinder_db_created   
  register: cinder_db

- name: Populate  cinder database
  raw: >
      su -s /bin/sh -c "cinder-manage db sync" cinder && touch /var/log/cinder_setup/.cinder_db_created
  args:   
      executable: /bin/sh
  when: cinder_db.stat.exists ==false 


- name: modify nova.conf
  shell: >
      [ `grep -e '^os_region_name' /etc/nova/nova.conf|wc -l` -eq 1 ] || sed -i '$a [cinder]\nos_region_name = RegionOne' /etc/nova/nova.conf

- name: restart cinder nova-api service
  service : name={{item}} state=restarted 
  with_items:
    - nova-api 
    - cinder-scheduler
    - cinder-api
