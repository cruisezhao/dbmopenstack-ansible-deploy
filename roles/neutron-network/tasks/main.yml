---
# tasks file for neutron-network
- name: Install install neutron-server neutron-plugin-ml2 python-neutronclient 
  apt: name={{item}} update_cache=yes cache_valid_time=3600
  with_items:
    - "python-neutronclient"


- name: echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf 
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes


- name: echo 'net.ipv4.conf.default.rp_filter=0' >> /etc/sysctl.conf 
  sysctl:
    name: net.ipv4.conf.default.rp_filter
    value: 0
    sysctl_set: yes
    state: present
    reload: yes



- name: echo 'net.ipv4.conf.all.rp_filter=0' >> /etc/sysctl.conf 
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: 0
    sysctl_set: yes
    state: present
    reload: yes


- name: install neutron components
  apt: name={{item}}  update_cache=yes cache_valid_time=3600
  with_items:
    - neutron-plugin-ml2
    - neutron-plugin-linuxbridge-agent
    - neutron-l3-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent
    - python-neutronclient

- name: template /etc/neutron/neutron.conf 
  template: 
    src: neutron.conf.j2
    dest: /etc/neutron/neutron.conf
    group: neutron
    backup: yes

- name: copy /etc/neutron/l3_agent.ini 
  copy:
    src: l3_agent.ini 
    dest: /etc/neutron/l3_agent.ini
    group: neutron
    backup: yes

- name: copy  /etc/neutron/dhcp_agent.ini 
  copy:
    src: dhcp_agent.ini
    dest: /etc/neutron/dhcp_agent.ini
    group: neutron
    backup: yes

- name: template /etc/neutron/metadata_agent.ini
  template:
    src: metadata_agent.ini.j2
    dest: /etc/neutron/metadata_agent.ini
    group: neutron
    backup: yes


- name: template /etc/neutron/plugins/ml2/ml2_conf.ini 
  template:
    src: ml2_conf.ini.j2
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    group: neutron
    backup: yes


- name: ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini 
  file: 
    src: /etc/neutron/plugins/ml2/ml2_conf.ini
    dest: /etc/neutron/plugin.ini
    state: link

- name: Get overlay network IP
  shell: >
    ifconfig | awk -F "[: ]+" '/inet addr:/ { if ($4 != "127.0.0.1") print $4 }' | grep {{os_neutron_overlay_network_starts_with}}
  register: overlay_network

- name: Get empty interface
  shell: >
     IPs=`ifconfig -s | awk '{print $1}' | grep -v "Iface"`;empty_if=;
     for i in $IPs ;
     do ip=`ifconfig $i | egrep  "inet\s+addr:[[:digit:]]+.[[:digit:]]+.[[:digit:]]+.[[:digit:]]+"`; 
       if [ -z "$ip" ] ; 
         then empty_if=$i; 
         break;
       fi;
     done;
     echo $empty_if;
  register: empty_if

- name: test overlay_network
  debug: msg={{overlay_network}}

- name: test empty_if
  debug: msg={{empty_if}}

- name: Tempalte /etc/neutron/plugins/ml2/linuxbridge_agent.ini 
  template:
    src:  linuxbridge_agent.ini.j2
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    backup: yes

- name: Copy /etc/neutron/dnsmasq-neutron.conf 
  copy:
    src: dnsmasq-neutron.conf
    dest: /etc/neutron/dnsmasq-neutron.conf


- name: restart service; l3-agent dhcp-agent metadata-agent linuxbridge-agent
  service: "name={{item}} state=restarted"
  with_items:
    - "neutron-l3-agent"
    - "neutron-dhcp-agent"
    - "neutron-metadata-agent"
    - "neutron-linuxbridge-agent"
